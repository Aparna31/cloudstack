<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "ACS101.ent">
%BOOK_ENTITIES;
]>

<!-- Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 "License"); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at
 
   http://www.apache.org/licenses/LICENSE-2.0
 
 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
-->


<chapter id="Clientsandshells">
  <title>Clients and Shells</title>
  <para>
    Clients and Shells are critical to the ease of use of any API, even more so Cloud APIs. In this chapter we present the basis of the &PRODUCT; API. We illustrate how to sign requests for the sake of completeness and because it is a very nice exercise for beginners. We then introduce CloudMonkey the &PRODUCT; CLI and shell which boasts a 100% coverage of the API. While jclouds is a java library, it can also be used as a cli or interactive shell, we present jclouds-cli to contrast it to CloudMonkey and introduce jclouds. Apache libcloud is a Python based API wrapper, once installed, a developer can use libcloud to talk to multiple cloud providers and cloud APIs, it serves a similar role as jclouds but in Python. Clostack is a clojure client. Clojure is receiving lots of attention recently for its clean functional programming style, clojure is the basis of Pallet which we will talk about in the next chapter. Clostack serves as a teaser for Clojure. Finally we cover Boto, the well-known Python Amazon Web Service interface, and show how it can be used with a &PRODUCT; cloud.
  </para>

    <xi:include href="cloudstackapi.xml" xmlns:xi="http://www.w3.org/2001/XInclude" />
    <xi:include href="cloudmonkey.xml" xmlns:xi="http://www.w3.org/2001/XInclude" />
    <xi:include href="jcloudscli.xml" xmlns:xi="http://www.w3.org/2001/XInclude" />
    <xi:include href="libcloud.xml" xmlns:xi="http://www.w3.org/2001/XInclude" />
    <xi:include href="boto.xml" xmlns:xi="http://www.w3.org/2001/XInclude" />
    <xi:include href="clostack.xml" xmlns:xi="http://www.w3.org/2001/XInclude" />

</chapter>

