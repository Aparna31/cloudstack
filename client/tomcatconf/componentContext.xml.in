
<!--
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements. See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership. The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License. You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an
  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied. See the License for the
  specific language governing permissions and limitations
  under the License.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
                      http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                      http://www.springframework.org/schema/tx
                      http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
                      http://www.springframework.org/schema/aop
                      http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
                      http://www.springframework.org/schema/context
                      http://www.springframework.org/schema/context/spring-context-3.0.xsd">


<!--

  OSS deployment configuration

  OSS/non-OSS counter-exclusive components and related configurations should be put here
  for example, configurationDaoImpl component, it has exclusive configuration settings in OSS and non-OSS deployment,
  its component declaration should be put in both componentContext.xml.in and nonossComponentContext.xml.in, each with
  independent configuration

-->
  
  <bean id="databaseUpgradeChecker" class="com.cloud.upgrade.DatabaseUpgradeChecker" />
  <bean id="encryptionSecretKeyChecker" class="com.cloud.utils.crypt.EncryptionSecretKeyChecker" />

  <bean id="managementServerImpl" class ="com.cloud.server.ManagementServerImpl" />
  <bean id="configurationServerImpl" class="com.cloud.server.ConfigurationServerImpl" />

  <bean id="clusterManagerImpl" class="com.cloud.cluster.ClusterManagerImpl" />
  <bean id="clusteredAgentManagerImpl" class="com.cloud.agent.manager.ClusteredAgentManagerImpl" />
  <bean id="clusteredVirtualMachineManagerImpl" class="com.cloud.vm.ClusteredVirtualMachineManagerImpl" />
  <bean id="highAvailabilityManagerExtImpl" class="com.cloud.ha.HighAvailabilityManagerExtImpl" />
  <bean id="userVmManagerImpl" class="com.cloud.vm.UserVmManagerImpl" />
  <bean id="consoleProxyManagerImpl" class="com.cloud.consoleproxy.ConsoleProxyManagerImpl" />
  <bean id="securityGroupManagerImpl2" class="com.cloud.network.security.SecurityGroupManagerImpl2" />
  <bean id="premiumSecondaryStorageManagerImpl" class="com.cloud.secstorage.PremiumSecondaryStorageManagerImpl" />
  <bean id="userVmDaoImpl" class="com.cloud.vm.dao.UserVmDaoImpl" />
  <bean id="ipv6AddressManagerImpl" class="com.cloud.network.Ipv6AddressManagerImpl" />

  <bean id="apiRateLimitServiceImpl" class="org.apache.cloudstack.ratelimit.ApiRateLimitServiceImpl"/>
  <bean id="BaremetalManager" class="com.cloud.baremetal.manager.BaremetalManagerImpl"/>
  <bean id="BaremetalDhcpManager" class="com.cloud.baremetal.networkservice.BaremetalDhcpManagerImpl"/>
  <bean id="BaremetalKickStartPxeService" class="com.cloud.baremetal.networkservice.BaremetalKickStartServiceImpl"/>
  <bean id="BaremetalPingPxeService" class="com.cloud.baremetal.networkservice.BareMetalPingServiceImpl" />
  <bean id="BaremetalPxeManager" class="com.cloud.baremetal.networkservice.BaremetalPxeManagerImpl" />
  <bean id="UcsManager" class="com.cloud.ucs.manager.UcsManagerImpl" />
  <bean id="UcsBladeDao" class="com.cloud.ucs.database.UcsBladeDaoImpl" />
  <bean id="UcsManagerDao" class="com.cloud.ucs.database.UcsManagerDaoImpl" />


  <!--
      Network Elements
  -->
  <bean id="Ovs" class="com.cloud.network.element.OvsElement">
    <property name="name" value="Ovs"/>
  </bean>
  <bean id="BareMetalDhcp" class="com.cloud.baremetal.networkservice.BaremetalDhcpElement">
      <property name="name" value="BareMetalDhcp"/>
  </bean>
  <bean id="BareMetalPxe" class="com.cloud.baremetal.networkservice.BaremetalPxeElement">
      <property name="name" value="BareMetalPxe"/>
  </bean>
  <bean id="BareMetalUserdata" class="com.cloud.baremetal.networkservice.BaremetalUserdataElement">
      <property name="name" value="BareMetalUserdata"/>
  </bean>
  <bean id="SecurityGroupProvider" class="com.cloud.network.element.SecurityGroupElement">
    <property name="name" value="SecurityGroupProvider"/>
  </bean>
  <bean id="VirtualRouter" class="com.cloud.network.element.VirtualRouterElement">
    <property name="name" value="VirtualRouter"/>
  </bean>
  <bean id="VpcVirtualRouter" class="com.cloud.network.element.VpcVirtualRouterElement">
    <property name="name" value="VpcVirtualRouter"/>
  </bean>
  <!--
  <bean id="NiciraNvp" class="com.cloud.network.element.NiciraNvpElement">
    <property name="name" value="NiciraNvp"/>
  </bean>
  -->

  <bean id="GlobalLoadBalancingRulesServiceImpl" class ="org.apache.cloudstack.region.gslb.GlobalLoadBalancingRulesServiceImpl" />

  <!--
    Nicira support components
  -->
  <bean id="niciraNvpDaoImpl" class="com.cloud.network.dao.NiciraNvpDaoImpl" />
  <bean id="niciraNvpNicMappingDaoImpl" class="com.cloud.network.dao.NiciraNvpNicMappingDaoImpl" />
  <bean id="niciraNvpRouterMappingDaoImpl" class="com.cloud.network.dao.NiciraNvpRouterMappingDaoImpl" />
  <bean id="NiciraNvpGuestNetworkGuru" class="com.cloud.network.guru.NiciraNvpGuestNetworkGuru">
    <property name="name" value="NiciraNvpGuestNetworkGuru"/>
  </bean>
  <bean id="NiciraNvp" class="com.cloud.network.element.NiciraNvpElement">
    <property name="name" value="NiciraNvp"/>
  </bean>

  <!-- 
    Midonet support components
  -->
  <bean id="MidoNetGuestNetworkGuru" class="com.cloud.network.guru.MidoNetGuestNetworkGuru">
    <property name="name" value="MidoNetGuestNetworkGuru"/>
  </bean>
  <bean id="MidoNetElement" class="com.cloud.network.element.MidoNetElement">
    <property name="name" value="MidoNetElement"/>
  </bean>

  <!--
    Stratosphere SSP support components
  -->
  <bean id="sspCredentialDaoImpl" class="org.apache.cloudstack.network.dao.SspCredentialDaoImpl"/>
  <bean id="sspTenantDaoImpl" class="org.apache.cloudstack.network.dao.SspTenantDaoImpl"/>
  <bean id="sspUuidDaoImpl" class="org.apache.cloudstack.network.dao.SspUuidDaoImpl"/>
  <bean id="SspGuestNetworkGuru" class="org.apache.cloudstack.network.guru.SspGuestNetworkGuru">
    <property name="name" value="SspGuestNetworkGuru"/>
  </bean>
  <bean id="StratosphereSsp" class="org.apache.cloudstack.network.element.SspElement">
    <property name="name" value="StratosphereSsp"/>
  </bean>

  <!--
    UCS support components
  -->
  <bean id="ucsBladeDaoImpl" class="com.cloud.ucs.database.UcsBladeDaoImpl" />
  <bean id="ucsManagerDaoImpl" class="com.cloud.ucs.database.UcsManagerDaoImpl" />

  <!--
      VXLAN support components
  -->
  <bean id="VxlanGuestNetworkGuru" class="com.cloud.network.guru.VxlanGuestNetworkGuru">
    <property name="name" value="VxlanGuestNetworkGuru"/>
  </bean>

<!--

  Deployment configurations of various adapters

  It determines whether or not a adapter is activated or how it is loaded in order in its managing provider,

-->

  <!-- Security adapters -->
  <bean id="userAuthenticators" class="com.cloud.utils.component.AdapterList">
    <property name="Adapters">
      <list>
          <ref bean="SHA256SaltedUserAuthenticator"/>
          <ref bean="MD5UserAuthenticator"/>
          <ref bean="LdapAuthenticator"/>
          <ref bean="PlainTextUserAuthenticator"/>
      </list>
    </property>
  </bean>
  <bean id="userPasswordEncoders" class="com.cloud.utils.component.AdapterList">
    <property name="Adapters">
      <list>
          <ref bean="SHA256SaltedUserAuthenticator"/>
          <ref bean="MD5UserAuthenticator"/>
          <ref bean="LdapAuthenticator"/>
          <ref bean="PlainTextUserAuthenticator"/>
      </list>
    </property>
  </bean>

  <bean id="securityCheckers" class="com.cloud.utils.component.AdapterList">
    <property name="Adapters">
      <list>
		  <ref bean="affinityGroupAccessChecker"/>
          <ref bean="domainChecker"/>
      </list>
    </property>
  </bean>

  <!-- Resource discoverers -->
  <bean id="resourceDiscoverers" class="com.cloud.utils.component.AdapterList">
    <property name="Adapters">
      <list>
          <ref bean="XcpServerDiscoverer"/>
          <ref bean="SecondaryStorageDiscoverer"/>
          <ref bean="KvmServerDiscoverer"/>
          <ref bean="LxcServerDiscoverer"/>
          <ref bean="OvmDiscoverer"/>
      </list>
    </property>
  </bean>

  <!-- HA adapters -->
  <bean id="haInvestigators" class="com.cloud.utils.component.AdapterList">
    <property name="Adapters">
      <list>
          <ref bean="CheckOnAgentInvestigator"/>
          <ref bean="XenServerInvestigator"/>
          <ref bean="UserVmDomRInvestigator"/>
          <ref bean="ManagementIPSystemVMInvestigator"/>
      </list>
    </property>
  </bean>

  <bean id="haFenceBuilders" class="com.cloud.utils.component.AdapterList">
    <property name="Adapters">
      <list>
          <ref bean="XenServerFencer"/>
          <ref bean="KVMFencer"/>
          <ref bean="OvmFencer"/>
      </list>
    </property>
  </bean>

  <!-- Deployment/allocation adapters -->
  <bean id="deploymentPlanners" class="com.cloud.utils.component.AdapterList">
    <property name="Adapters">
      <list>
          <ref bean="FirstFitPlanner" />
          <ref bean="UserDispersingPlanner" />
          <ref bean="UserConcentratedPodPlanner" />
          <ref bean="ImplicitDedicationPlanner" />
<!--
          <ref bean="BareMetalPlanner" />
-->
      </list>
    </property>
  </bean>

  <bean id="podAllocators" class="com.cloud.utils.component.AdapterList">
    <property name="Adapters">
      <list>
          <ref bean="UserConcentratedAllocator"/>
      </list>
    </property>
  </bean>

  <bean id="hostAllocators" class="com.cloud.utils.component.AdapterList">
    <property name="Adapters">
      <list>
          <ref bean="FirstFitRouting"/>
      </list>
    </property>
  </bean>

  <bean id="storagePoolAllocators" class="com.cloud.utils.component.AdapterList">
    <property name="Adapters">
      <list>
          <ref bean="LocalStoragePoolAllocator"/>
          <ref bean="clusterScopeStoragePoolAllocator"/>
          <ref bean="zoneWideStoragePoolAllocator"/>
      </list>
    </property>
  </bean>

  <!-- Networking adapters -->
  <bean id="ipDeployers" class="com.cloud.utils.component.AdapterList">
    <property name="Adapters">
      <list>
          <ref bean="elasticLoadBalancerElement"/>
          <ref bean="VirtualRouter"/>
          <ref bean="VpcVirtualRouter"/>
          <ref bean="NiciraNvp"/>
          <ref bean="InternalLbVm"/>
      </list>
    </property>
  </bean>

  <bean id="dhcpProviders" class="com.cloud.utils.component.AdapterList">
    <property name="Adapters">
      <list>
          <ref bean="VirtualRouter"/>
          <ref bean="VpcVirtualRouter"/>
<!--
          <ref bean="BareMetalDhcp"/>
-->
      </list>
    </property>
  </bean>

  <bean id="networkGurus" class="com.cloud.utils.component.AdapterList">
    <property name="Adapters">
      <list>
          <ref bean="StorageNetworkGuru"/>
          <ref bean="ExternalGuestNetworkGuru"/>
          <ref bean="PublicNetworkGuru"/>
          <ref bean="PodBasedNetworkGuru"/>
          <ref bean="DirectPodBasedNetworkGuru"/>
          <ref bean="ControlNetworkGuru"/>
          <ref bean="DirectNetworkGuru"/>
          <ref bean="OvsGuestNetworkGuru"/>
          <ref bean="PrivateNetworkGuru"/>
          <ref bean="NiciraNvpGuestNetworkGuru"/>
          <ref bean="MidoNetGuestNetworkGuru"/>
          <ref bean="SspGuestNetworkGuru"/>
          <ref bean="VxlanGuestNetworkGuru"/>
      </list>
    </property>
  </bean>
  
  <bean id="networkElements" class="com.cloud.utils.component.AdapterList">
    <property name="Adapters">
      <list>
          <ref bean="VirtualRouter"/>
          <ref bean="Ovs"/>
          <ref bean="SecurityGroupProvider"/>
          <ref bean="VpcVirtualRouter"/>
          <ref bean="NiciraNvp" />
          <ref bean="MidoNetElement"/>
          <ref bean="InternalLbVm"/>
<!--
          <ref bean="BareMetalDhcp"/>
          <ref bean="BareMetalPxe"/>
          <ref bean="BareMetalUserdata"/>
-->
      </list>
    </property>
  </bean>

  <!--
   AffinityGroup Processors
  -->
  <bean id="HostAntiAffinityProcessor" class="org.apache.cloudstack.affinity.HostAntiAffinityProcessor">
   	<property name="name" value="HostAntiAffinityProcessor"/>
   	<property name="type" value="host anti-affinity"/>
  </bean>

  <bean id="affinityProcessors" class="com.cloud.utils.component.AdapterList">
    <property name="Adapters">
      <list>
          <ref bean="HostAntiAffinityProcessor" />
      </list>
    </property>
  </bean>

</beans>
